复习：
    1，什么是react？
        是国外的js框架

    2，框架和库（插件）的区别？
        为什么有框架：就是为了快速开发项目。
        插件或库，都是封装好的api，直接调用。如jq。  ~~~   类似于工具箱。
        框架是软件开发的一种解决方案。人家已经把项目的50%的代码给你完成了。类似于毛坯房。
            后端（给前端提供数据（api接口的东西））：
                JAVA:SSM(SM)   SSH    S:Spring(SpringMVC)   S:SpringMVC   M:mybais
                PHP:ThinkPHP,Lavel...
                NODE:express,koa,egg...
                Python:djong,flask...
                ....
            web前端：
                vue,react,ng
            android或ios里面有框架吗？
                android（java）或ios(oc,swift)本身就是一个框架
            在公司里面，只有会框架，才有生产力。

    3，不使用框架的性能高，还是使用框架的性能高？
        在大多数和后端框架中，框架都是影响效率。
        但是在前端的三大架构中，vue，react 它不仅仅在原生的基础的进行了封装，还改变编程的一种方式，
        在原生js，频繁操作dom，vue和react它就不再去操作dom，提出了虚拟dom的东西，有了虚拟dom的东西，
        那么就不再去操作真实的dom，性能就非常高。

        就是由于rect和vue不再去操作直接dom，性能就高了，使用这两个框架在国内，目前非常火。

        <h1 id="box">h1</h1>
        <script>
            var h1 = document.getElementById("box")
            得到h1后，就可以频繁地操作h1，操作h1就是操作dom   h1就是一个dom元素
            频繁操作dom，每一次操作dom，都会重绘页面。就导致性能非常低，这也是jq为
            什么会淘汰原因。
        </script>

    4，react中的核心内容：
        要使用react写项目：项目的功能，划分组件（基本功），确定组件中的状态（一般情况下，状态都是放在根组件中）
        JSX:仅仅是写组件的一种方式，js+xml(html) 
        组件：堆积木，复用，定义组件时，非常恶心（写结构，写样式），使用时，非常爽
        state/props：尽可能使用props。
        事件：事件源，事件，事件处理程序    改变状态   setState()
        受控和非受控组件：了解
        评论列表小dome


    5，把所有数据放在根组件好不好？
        好：相比数据存在每一个组件中来说，数据好维护
        不好：根组件中的数据要一个劲往下传，非常烦锁。  redux

一问：组件的状态定义在哪儿？
      在App组件中。

二问：通常是在哪里修改组件的状态
      组件的状态只能在当前组件中修改。在其它任何地方都不能修改，这里我们只能在App组件中来修改状态。

三问：添加评论操作是在哪个组件中进行的
    当前我们添加评论是在FromBox组件中来完成。

目前前端开发：
    1，前端开发都是基于node
    2，脚手架（就是别人已经把项目的基本骨架搭建好，你只需要把人家的基本骨架拿，
           在人家的基础上进行开发）
    3，在公司中做项目，都是基于脚手架开发，好处：？？？？

node是后端开发的，node可以做两件事：
    1，和java,php,py一样，做后端 
    2，做为前端开发的小工具

使用node的基本工具：
    安装完node后，那么node又自带了一个下载的工具，叫npm。
    有了npm这个下载工具，那么，我们以后要下载一个东西，使用npm i react.js 

项目的步骤：
    第一步（只需要做一次）：你需要百度node,找到node的官网，下载node的安装包，安装，通过node -v检测node是否安装成功
·   第二步（只需要做一次）：安装脚手架，npm i create-react-app -g       -g表示全局安装    安装完后，我们就可以使用脚手架来创建项目的基本结构
    第三步：通过脚手架来创建项目，create-react-app　todomvc   项目创建完成后，那么你就得到一堆的文件和文件夹，就是我们项目的基本骨架。
    第四步：进入到项目，启动项目   cd todomvc     npm start 
    第五步：把src下面的所有的文件，全部删除，从0开始
    第六步：创建入口文件index.js 和 App根组件

分析通过脚手架创建的项目，第一个页面是，如何产生的？














